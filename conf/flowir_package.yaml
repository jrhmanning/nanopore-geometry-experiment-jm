interface:
  description: 'Uses the Poreblazer software package to calculate geometric properties of nanoporous materials.'
  inputSpec:
    namingScheme: 'MaterialSource/MaterialName'
    inputExtractionMethod:
      hookGetInputIds:
        source:
          path: 'input/cif_files.dat'
  propertiesSpec: # output information description
  - name: 'Volume'
    description: 'Total cell volume, expressed in Å^3 (Angstrom)'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'Mass'
    description: 'Total cell mass, expressed in g/mol'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'Density'
    description: 'Total cell density, expressed in g/cm^3'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'PLD'
    description: 'Pore-limiting diameter, expressed in Å (Angstrom)'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'LCD'
    description: 'Largest cavity diameter, expressed in Å^3 (Angstrom)'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'Dimensionality'
    description: 'Cell percolation dimensionality (0, 1, 2, or 3)'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'T_S_AC'
    description: 'Total accessible surface area, expressed in Å^2 (Angstrom)'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'T_S_AC_cm3'
    description: 'Total accessible surface area per unit volume, expressed in m2/cm3'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'T_S_AC_g'
    description: 'Total accessible surface area per unit mass, expressed in m2/g'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'T_V_He'
    description: 'Total Helium-accessible pore volume, expressed in Å^3 (Angstrom)'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'T_V_He_g'
    description: 'Total Helium-accessible pore volume per unit mass, expressed in cm^3/g'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'T_V_G_A3'
    description: 'Total geometric pore volume, expressed in Å^3 (Angstrom)'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'T_V_G'
    description: 'Total geometric pore volume per unit mass, expressed in cm^3/g'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'T_V_PO_A3'
    description: 'Total Probe-accessible pore volume, expressed in Å^3 (Angstrom)'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'T_V_PO'
    description: 'Total Probe-accessible pore volume per unit mass, expressed in cm^3/g'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'T_FV_PO'
    description: 'Total Probe-accessible volume fraction'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'NA_S_AC'
    description: 'Network-accessible surface area, expressed in Å^2 (Angstrom)'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'NA_S_AC_cm3'
    description: 'Network-accessible surface area per unit volume, expressed in m2/cm3'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'NA_S_AC_g'
    description: 'Network-accessible surface area per unit mass, expressed in m2/g'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'NA_V_He'
    description: 'Network-accessible Helium pore volume, expressed in Å^3 (Angstrom)'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'NA_V_He_g'
    description: 'Network-accesible Helium pore volume per unit mass, expressed in cm^3/g'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'NA_V_G_A3'
    description: 'Network-accessible geometric pore volume, expressed in Å^3 (Angstrom)'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'NA_V_G'
    description: 'Network-accessible geometric pore volume per unit mass, expressed in cm^3/g'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'NA_V_PO_A3'
    description: 'Network-accessible Probe pore volume, expressed in Å^3 (Angstrom)'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'NA_V_PO'
    description: 'Network-accessible Probe pore volume per unit mass, expressed in cm^3/g'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'
  - name: 'NA_FV_PO'
    description: 'Network-accessible Probe volume fraction'
    propertyExtractionMethod:
      hookGetProperties:
        source:
          keyOutput: 'geometricalProperties'

variables: #input variables defined during workflow
  default:
    global:
      numberOfNanopores: 3 # number of materials to analyse
      probeRadius_A: 1.4 # Prome atom radius
      zeo_memory: '2Gi' # allocatable memory

blueprint: # Workflow scheduling information (job length, jobscript syntax)
  openshift:
    global:
      resourceManager:
        config:
          walltime: 14400.0
          backend: kubernetes

environments: # defining environment variables like PYTHONPATH (?)
  default:
    geometry:
      DEFAULTS: INGRESS
      PATH: /geometry/bin:/opt/conda/bin/:$PATH
      INGRESS_SUBDOMAIN: ${INGRESS}
    raspa:
      PATH: /raspa/bin:$PATH

application-dependencies: 
  default:
    - nanopore-database

components: # The workflow, dividdd into manageable stages

  - stage: 0 # finds the directory for your input files in input/cif_files.dat
    name: GetNanoporeSource
    command:
      arguments: sed -n "$((%(replica)s+1)),+0p" input/cif_files.dat:ref | awk -F "/" '{print $1}'
      interpreter: bash
    references:
      - input/cif_files.dat:ref
    resourceManager:
      config:
        backend: local
    workflowAttributes:
      replicate: '%(numberOfNanopores)s'

  - stage: 0 # finds the file names for your input files in input/cif_files.dat
    name: GetNanoporeName
    command:
      arguments: sed -n "$((%(replica)s+1)),+0p" input/cif_files.dat:ref | awk -F "/" '{print $2}'
      interpreter: bash
    references:
      - input/cif_files.dat:ref
    resourceManager:
      config:
        backend: local
    workflowAttributes:
      replicate: '%(numberOfNanopores)s'

  - stage: 0 # Creates preprocesses filenames into input geometries for Zeo
    name: InputFileGen
    command:
      environment: geometry
      executable: python 
      arguments: poreblazer_preprocess.py --FrameworkFolder nanopore-database:ref -f stage0.GetNanoporeName:output -FrameworkFolder stage0.GetNanoporeSource:output -o /data_io #works?
    references:
      - nanopore-database:ref
      - stage0.GetNanoporeName:output
      - stage0.GetNanoporeSource:output
    resourceManager:
      kubernetes:
        image: jrhmanning/poreblazer:latest
        cpuUnitsPerCore: 0.25
    resourceRequest:
      memory: 512Mi
    workflowAttributes:
      shutdownOn:
      - Killed
      - KnownIssue

  - stage: 1 # runs Poreblazer
    name: PoreBlazer
    command:
      environment: geometry
      executable: python 
      arguments: poreblazer_run.py -f stage0.GetNanoporeName:output -i /data_io -o /data_io -f stage0.GetNanoporeName:output
    references:
      - stage0.GetNanoporeName:output
      - stage0.InputFileGen/input.dat:copy
      - stage0.InputFileGen/xyz.tgz:copy
    resourceManager:
      kubernetes:
        image: jrhmanning/poreblazer:latest
        cpuUnitsPerCore: 1.0
    resourceRequest:
      memory: '%(zeo_memory)s'
    workflowAttributes:
      shutdownOn:
      - Killed
      - KnownIssue

  - stage: 2 # postprocesses output to a json file
    name: Postprocess
    command:
      environment: geometry
      executable: python
      arguments: poreblazer_postprocess.py -f stage0.GetNanoporeName:output -o .
    references:
      - stage0.GetNanoporeName:output
      - stage1.PoreBlazer/summary.tgz:copy
    resourceManager:
      kubernetes:
        image: jrhmanning/poreblazer:latest # need to update the docker image to have the postprocessing script in too
        cpuUnitsPerCore: 0.25
    resourceRequest:
      memory: 256Mi

  - stage: 3 # Adds the results metadata to the master database
    name: WriteGeometryToDatabase
    command:
      environment: geometry
      executable: python 
      arguments: /bin/write_geometry_to_database.py --FrameworkName stage0.GetNanoporeName:output --FrameworkSource stage0.GetNanoporeSource:output .
    references:
      - stage0.GetNanoporeName:output
      - stage0.GetNanoporeSource:output
      - stage2.Postprocess/geometricProperties.json:copy
    resourceManager:
      kubernetes:
        image: jrhmanning/geometry-mdlab-mirror:latest
        cpuUnitsPerCore: 0.25
    resourceRequest:
      memory: 256Mi

  - stage: 3 # Dumps the results to a json file and compresses to tgz
    name: AggregateGeometry
    command:
      environment: geometry
      executable: python 
      arguments: /bin/aggregate_geometry_output.py --FrameworkName stage0.GetNanoporeName:output --OutputFolders stage2.Postprocess/geometricProperties.json:ref
    references:
      - stage0.GetNanoporeName:output
      - stage2.Postprocess/geometricProperties.json:ref
    resourceManager:
      kubernetes:
        image: jrhmanning/geometry-mdlab-mirror:latest
        cpuUnitsPerCore: 0.25
    resourceRequest:
      memory: 256Mi
    workflowAttributes:
      aggregate: true

output: # returns it to the user
  geometricalProperties:
    data-in: "AggregateGeometry/geometry.tgz:copy"
    stages:
      - 3

platforms:
  - openshift

version: 1.0.0
